{
	"variables": [],
	"info": {
		"name": "CHSV1.postman",
		"_postman_id": "b1489d42-1192-6596-389a-0ef9af13ae25",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Custom Tests",
			"description": "",
			"item": [
				{
					"name": "1 Nuke",
					"description": "",
					"item": [
						{
							"name": "Admin Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLogin\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
								},
								"description": "Good Login\n"
							},
							"response": []
						},
						{
							"name": "DB_DELETE",
							"request": {
								"url": "{{url}}/DB",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "2 Registration",
					"description": "",
					"item": [
						{
							"name": "2.0 Not logged in",
							"description": "",
							"item": [
								{
									"name": "Prss_POST_notLogged_admincreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// role not student",
													"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_notLogged_studentcreate_noterms",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms not accepted",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_notLogged_studentAcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// role is student",
													"//everything is okay",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"if (tests[\"Status code is 200: Success\"]) {",
													"    postman.setEnvironmentVariable(\"studentAcreated\", (new Date()).getTime());",
													"}",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_notLogged_studentcreate_dup",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// with nonunique email",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Ssns/{cookie}_DELETE_Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// not logged in",
													"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"",
													"// //non-admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"// //not person in question",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// //admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns/{{curLogin}}",
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.1 Student logged in",
							"description": "",
							"item": [
								{
									"name": "Snss_POST_StudentA_BadLogin",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"//badLogin",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"badLogin\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //non-admin log in",
													"// tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"// //admin log in",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"WHOA\", \"password\": \"passwordA\"}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Snss_POST_StudentA_Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //badLogin",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"//non-admin log in",
													"tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"if (tests[\"Cookie Returned\"])",
													"   postman.setEnvironmentVariable(\"curLogin\",",
													"    postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"// //admin log in",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_admincreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// role not student",
													"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentcreate_noterms",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms not accepted",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_emptyPass",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_NoLast",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_NoEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// no Email",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_emailEmpty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_lastEmpty",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_dup",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"//non-admin logged in",
													"// with nonunique email",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Ssns/{cookie}_DELETE_Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"",
													"//non-admin",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"// //not person in question",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// //admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns/{{curLogin}}",
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.2 Admin logged in",
							"description": "",
							"item": [
								{
									"name": "Snss_POST_Admin_BadLogin",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"//badLogin",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"badLogin\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //non-admin log in",
													"// tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"// //admin log in",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"WHOA\", \"password\": \"passwordA\"}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Snss_POST_Admin_Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //badLogin",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin log in",
													"// tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"//admin log in",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"if (tests[\"Cookie Returned\"])",
													"  postman.setEnvironmentVariable(\"curLogin\",",
													"    postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate_noEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordC\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate_noLast",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// if (tests[\"Status code is 200: Success\"]) {",
													"//     postman.setEnvironmentVariable(\"adminCcreated\", (new Date()).getTime());",
													"// }",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserC@domainC\",\n    \"firstName\": \"FirstA\",\n    \"password\" : \"passwordC\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate_emptyEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// if (tests[\"Status code is 200: Success\"]) {",
													"//     postman.setEnvironmentVariable(\"adminCcreated\", (new Date()).getTime());",
													"// }",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordC\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate_emptyLast",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// if (tests[\"Status code is 200: Success\"]) {",
													"//     postman.setEnvironmentVariable(\"adminCcreated\", (new Date()).getTime());",
													"// }",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserC@domainC\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"\",\n    \"password\" : \"passwordC\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate_emptyPass",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// if (tests[\"Status code is 200: Success\"]) {",
													"//     postman.setEnvironmentVariable(\"adminCcreated\", (new Date()).getTime());",
													"// }",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserF@domainF\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"if (tests[\"Status code is 200: Success\"]) {",
													"    postman.setEnvironmentVariable(\"adminCcreated\", (new Date()).getTime());",
													"}",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserC@domainC\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordC\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminDcreate_noterms",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms not accepted",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserD@domainD\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordD\",\n    \"role\"     : 1,\n    \"termsAccepted\": false\n   \n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminEcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// with unique email",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms accepted",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserE@domainE\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminEcreate_dup",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"//admin logged in",
													"// with nonunique email",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Prss",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Ssns/{cookie}_DELETE_Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"",
													"// //non-admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"// //not person in question",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"//admin",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"url": "{{url}}/Ssns/{{curLogin}}",
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "3 Not Logged in",
					"description": "",
					"item": [
						{
							"name": "Prss_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss",
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"//not person in question",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_Logout_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not person in question",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLogin}}",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLogin}}",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_Template_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//no owner",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_DELETE_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"termsAccepted\": \"true\",\n\t\"role\": \"0\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_notPerson",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passEmpty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"\",\n\t\"oldPassword\" : \"\",\n\t\"role\": \"0\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_noOldPass",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"role\": \"0\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // everything right",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs/{msgId}_GET_UnAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/{cnvId}/Msgs",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "4 Logged in as basic user!",
					"description": "",
					"item": [
						{
							"name": "Snss_POST_StudentA_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginA\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"tests[\"Location header is present\"] = responseHeaders.hasOwnProperty(\"Location\");",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin logged in",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"person in question\"] = (JSON.parse(responseBody)).length === 0;",
											"",
											"// // // without valid email",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Prss?email=UserB@domainB",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserB@domainB",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss_GET_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"person in question\"] = (JSON.parse(responseBody)).length !== 0;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Prss?email=UserA@domainA",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserA@domainA",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"if (tests[\"Status code is 200: Success\"]) {",
											"    tests[\"account created within 1 second\"] = parseInt(environment[\"studentAcreated\"]) <= parseInt(JSON.parse(responseBody)[0][\"whenRegistered\"] + 1000);",
											"    tests[\"account created termsAccepted\"] = parseInt(environment[\"studentAcreated\"]) <= parseInt(JSON.parse(responseBody)[0][\"termsAccepted\"] + 1000);",
											"}",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_B",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// Not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"forbiddenField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"termsAccepted\": \"true\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_reg",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"forbiddenField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"whenRegistered\": \"1234\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_reg copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"whenRegistered\": \"1234\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_notPerson",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"//Not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_role",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"role\": 1\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_role copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"role\": 1\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passEmpty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"\",\n\t\"oldPassword\" : \"\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_noOldPass",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"//no old pass",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"noOldPwd\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passMismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//mismatch pass",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"oldPwdMismatch\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordB\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// //not person in question",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLoginA}}",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Location header is present\"] = responseHeaders.hasOwnProperty(\"Location\");",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_null",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : null\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"yo\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_name_too_long",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//title longer than 80 chars",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"CHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRIS\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg1Time\", (new Date()).getTime());",
											"    postman.setEnvironmentVariable(\"msg1TimeB4Test\", (new Date()).getTime() + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"hi\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_noOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_withOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"non-empty Response\"] = responseBody? true : false;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Cnvs/?owner=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									],
									"query": [
										{
											"key": "owner",
											"value": "2",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if ([\"Status code is 200\"] ) {",
											"    tests[\"all content in body\"] = (\"id\" in JSON.parse(responseBody)) && (\"title\" in JSON.parse(responseBody)) && (\"ownerId\" in JSON.parse(responseBody)) && (\"lastMessage\" in JSON.parse(responseBody));",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_noTitle",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// No title",
											"tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"yo\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_over5000",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// Message over 5000",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// if (tests[\"Status code is 200\"]) {",
											"//     postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"// }",
											"",
											"//empty body",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_empty copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// if (tests[\"Status code is 200\"]) {",
											"//     postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"// }",
											"",
											"//empty body",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\":null\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal_msg_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"}",
											"tests[\"Location header is present\"] = responseHeaders.hasOwnProperty(\"Location\");",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"yo\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Gets all Msgs\"] = (JSON.parse(responseBody)).length == 2;",
											"if (tests[\"Status code is 200\"]){",
											"    if (parseInt((JSON.parse(responseBody))[0][\"whenMade\"]) ===  parseInt((JSON.parse(responseBody))[1][\"whenMade\"])){",
											"        tests[\"inceasing message order\"] = parseInt((JSON.parse(responseBody))[0][\"id\"]) < parseInt((JSON.parse(responseBody))[1][\"id\"]);",
											"    }",
											"    else {",
											"        tests[\"inceasing message order\"] = parseInt((JSON.parse(responseBody))[0][\"whenMade\"]) <  parseInt((JSON.parse(responseBody))[1][\"whenMade\"])",
											"    }",
											"}",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if ([\"Status code is 200\"]) {",
											"    tests[\"Gets 1 Msg\"] = (JSON.parse(responseBody)).length == 1;",
											"    tests[\"all content in body\"] = (\"whenMade\" in JSON.parse(responseBody)[0]) && (\"content\" in JSON.parse(responseBody)[0]) && (\"email\" in JSON.parse(responseBody)[0]) && (\"id\" in JSON.parse(responseBody)[0]);",
											"}",
											"",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs?num=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									],
									"query": [
										{
											"key": "num",
											"value": "1",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg1Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"    tests[\"all content in body\"] = (\"whenMade\" in JSON.parse(responseBody)) && (\"content\" in JSON.parse(responseBody)) && (\"email\" in JSON.parse(responseBody));",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Msgs/1",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg2Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Msgs/2",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Snss_POST_StudentB_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginB\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserB@domainB\", \"password\": \"passwordB\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_noOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// not the user",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"YOOOOOOO\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin logged in not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_DELETE_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not the person ",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLoginA}}",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Snss_POST_StudentA_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginA\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal_msg_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"yo\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_b4",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Gets Prev Msgs\"] = (JSON.parse(responseBody)).length < 3;",
											"console.log(responseBody)",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs?dateTime={{msg1TimeB4Test}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									],
									"query": [
										{
											"key": "dateTime",
											"value": "{{msg1TimeB4Test}}",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_b4_no",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"Empty Body\"] = JSON.parse(responseBody).length === 0;",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs?dateTime=dfasfgasfvfva",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									],
									"query": [
										{
											"key": "dateTime",
											"value": "dfasfgasfvfva",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_DELETE_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"empty body\"] = responseBody === \"\";",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin logged in not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "5 Logged in as admin",
					"description": "",
					"item": [
						{
							"name": "Snss_POST_Admin_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin log in",
											"// tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"//admin log in",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"  postman.setEnvironmentVariable(\"curLogin\",",
											"    postman.getResponseCookie(\"CHSAuth\").value);",
											"tests[\"Location header is present\"] = responseHeaders.hasOwnProperty(\"Location\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// tests[\"person in question\"] = (JSON.parse(responseBody)).length === 0;",
											"",
											"// // // without valid email",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"",
											"// //admin",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Prss?email=UserB@domainB",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserB@domainB",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss_GET_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"person in question\"] = (JSON.parse(responseBody)).length !== 0;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Prss?email=UserA@domainA",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserA@domainA",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_B",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200: Success\"]) {",
											"    tests[\"account created within 1 second\"] = parseInt(environment[\"adminCcreated\"]) <= parseInt(JSON.parse(responseBody)[0][\"whenRegistered\"] + 1000);",
											"    tests[\"account created termsAccepted\"] = parseInt(environment[\"adminCcreated\"]) <= parseInt(JSON.parse(responseBody)[0][\"termsAccepted\"] + 1000);",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/4",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"forbiddenField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"termsAccepted\": \"true\",\n\t\"role\": \"0\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_reg",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"forbiddenField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"whenRegistered\": \"1234\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_notPerson",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"//Not person in question",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_role",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// role changed",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"role\": 1\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passEmpty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"\",\n\t\"oldPassword\" : \"\",\n\t\"role\": \"0\"\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_noOldPass",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"//no old pass",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"role\": 0\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_PasswordMistmatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //mismatch pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// tests[\"Has Error Tags\"] = (\"oldPwdMismatch\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // everything right",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"//no old pass",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"password\",\n\t\"role\" : 1\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"password\",\n\t\"role\" : 1\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normalwitholdPW",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"password\",\n\t\"oldPassword\" : \"passwordC\",\n\t\"role\" : 1\n}\n"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// //not person in question",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLoginB}}",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GETown",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLogin}}",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_ASession",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLoginA}}",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Location header is present\"] = responseHeaders.hasOwnProperty(\"Location\");",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"admin\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_null",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//null value",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : null\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"admin2\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_name_too_long",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//title longer than 80 chars",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"CHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRIS\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_nonparsablebody",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\twrgwrga\n\tgargstr\n\theryh\n\tethwrthe5\n\twehth\n\tsh\n\tsdht\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_noOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_withOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"non-empty Response\"] = responseBody? true : false;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/Cnvs/?owner=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									],
									"query": [
										{
											"key": "owner",
											"value": "2",
											"equals": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if ([\"Status code is 200\"] ) {",
											"    tests[\"all content in body\"] = (\"id\" in JSON.parse(responseBody)) && (\"title\" in JSON.parse(responseBody)) && (\"ownerId\" in JSON.parse(responseBody)) && (\"lastMessage\" in JSON.parse(responseBody));",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/3",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// doesn't exist",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"notFound\" === JSON.parse(responseBody)[0][\"tag\"]);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/1",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if ([\"Status code is 200\"] ) {",
											"    tests[\"all content in body\"] = (\"id\" in JSON.parse(responseBody)) && (\"title\" in JSON.parse(responseBody)) && (\"ownerId\" in JSON.parse(responseBody)) && (\"lastMessage\" in JSON.parse(responseBody));",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if ([\"Status code is 200\"] ) {",
											"    tests[\"all content in body\"] = (\"id\" in JSON.parse(responseBody)) && (\"title\" in JSON.parse(responseBody)) && (\"ownerId\" in JSON.parse(responseBody)) && (\"lastMessage\" in JSON.parse(responseBody));",
											"}"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/4",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if ([\"Status code is 200\"] ) {",
											"    tests[\"all content in body\"] = (\"id\" in JSON.parse(responseBody)) && (\"title\" in JSON.parse(responseBody)) && (\"ownerId\" in JSON.parse(responseBody)) && (\"lastMessage\" in JSON.parse(responseBody));",
											"}"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/5",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_noTitle",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// No title",
											"tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"yo\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_NormNotOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/3",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"NOT MINE\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_Normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/4",
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"NEWWAVE\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_over5000",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// Message over 5000",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg1Time\", (new Date()).getTime());",
											"}",
											"tests[\"Location header is present\"] = responseHeaders.hasOwnProperty(\"Location\");",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"hi\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_null",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// if (tests[\"Status code is 200\"]) {",
											"//     postman.setEnvironmentVariable(\"msg1Time\", (new Date()).getTime());",
											"// }",
											"",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : null\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// if (tests[\"Status code is 200\"]) {",
											"//     postman.setEnvironmentVariable(\"msg1Time\", (new Date()).getTime());",
											"// }",
											"",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal_msg_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"yo\"\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_nonParsable",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// if (tests[\"Status code is 200\"]) {",
											"//     postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"// }",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\tgashss\n\tdgbsg\n\tstehsry\n\tjw6jw6jw46jw45hwrth\n\tsehe5h\n\twh\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]){",
											"    if (parseInt((JSON.parse(responseBody))[0][\"whenMade\"]) ===  parseInt((JSON.parse(responseBody))[1][\"whenMade\"])){",
											"        tests[\"inceasing message order\"] = parseInt((JSON.parse(responseBody))[0][\"id\"]) < parseInt((JSON.parse(responseBody))[1][\"id\"]);",
											"    }",
											"    else {",
											"        tests[\"inceasing message order\"] = parseInt((JSON.parse(responseBody))[0][\"whenMade\"]) <  parseInt((JSON.parse(responseBody))[1][\"whenMade\"])",
											"    }",
											"}",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Cnvs/2/Msgs",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg1Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"    tests[\"all content in body\"] = (\"whenMade\" in JSON.parse(responseBody)) && (\"content\" in JSON.parse(responseBody)) && (\"email\" in JSON.parse(responseBody));",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Msgs/4",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg2Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Msgs/5",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Body Empty\"] = responseBody === \"\";"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns/{{curLogin}}",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "nuke the server",
					"description": "",
					"item": [
						{
							"name": "DB_DELETE",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/DB",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Snss_POST_StudentA_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginA\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "DB_DELETE",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/DB",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Snss_POST_Admin_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin log in",
											"// tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"//admin log in",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"  postman.setEnvironmentVariable(\"curLogin\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Ssns",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //non-admin logged in not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"Body Empty\"] = responseBody === \"\";"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/Prss/2",
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "DB_DELETE",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"tests[\"Body Empty\"] = responseBody === \"\";"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/DB",
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}