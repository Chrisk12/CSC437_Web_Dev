{
	"info": {
		"name": "CHSV1.postman",
		"_postman_id": "9aea4876-1bf3-6b9d-7e67-2a9783690be8",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1 Nuke",
			"description": "",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
									" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
									"if (tests[\"Cookie Returned\"])",
									"   postman.setEnvironmentVariable(\"curLogin\",",
									"    postman.getResponseCookie(\"CHSAuth\").value)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						},
						"description": "Good Login\n"
					},
					"response": []
				},
				{
					"name": "Nuke",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/javascript"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/DB",
							"host": [
								"{{url}}"
							],
							"path": [
								"DB"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "2 Registration",
			"description": "",
			"item": [
				{
					"name": "Register Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Login as Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var locURL = postman.getResponseHeader(\"Location\").split('/');",
									"var cookie = postman.getResponseCookie(\"CHSAuth\");",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Cookie Returned\"] = cookie && cookie.value !== undefined;",
									"",
									"if (tests[\"Cookie Returned\"]) {",
									"   postman.setEnvironmentVariable(\"curLogin\", cookie.value)",
									"   tests[\"Cookie matches session\"] = locURL[locURL.length - 1]",
									"    === cookie.value;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"userA@domainA\", \"password\": \"passwordA\"}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						},
						"description": "Good Login\n"
					},
					"response": []
				},
				{
					"name": "Register An Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstB\",\n    \"lastName\" : \"LastB\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "Should fail trying to make admin"
					},
					"response": []
				},
				{
					"name": "Register Student w/o Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Body matches string\"] = responseBody.has(\"missingField\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n}"
						},
						"url": {
							"raw": "{{url}}/Prss",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "3 Prs Modification",
			"description": "",
			"item": [
				{
					"name": "Get Info Without Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"tests[\"Body matches string\"] = responseBody === \"\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"1"
							]
						},
						"description": "no login get info\n"
					},
					"response": []
				},
				{
					"name": "Login Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Code 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
									" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
									"if (tests[\"Cookie Returned\"])",
									"   postman.setEnvironmentVariable(\"curLogin\",",
									"    postman.getResponseCookie(\"CHSAuth\").value)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"password\" : \"passwordA\"\n}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Edit Student Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"FirstAV1\"\n}"
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Remove Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Logout Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Ssns/{{curLogin}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns",
								"{{curLogin}}"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
									" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
									"if (tests[\"Cookie Returned\"])",
									"   postman.setEnvironmentVariable(\"curLogin\",",
									"    postman.getResponseCookie(\"CHSAuth\").value)"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
						},
						"url": {
							"raw": "{{url}}/Ssns",
							"host": [
								"{{url}}"
							],
							"path": [
								"Ssns"
							]
						},
						"description": "Good Login\n"
					},
					"response": []
				},
				{
					"name": "Check New StudentA Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Correct Name\"] = jsonData[0].firstName === \"FirstAV1\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Remove Student A",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Check Student A Dropped",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"tests[\"Not Found\"] = responseBody.has(\"notFound\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/Prss/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"Prss",
								"2"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Custom Tests",
			"description": "",
			"item": [
				{
					"name": "1 Nuke",
					"description": "",
					"item": [
						{
							"name": "Admin Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLogin\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": "Good Login\n"
							},
							"response": []
						},
						{
							"name": "DB_DELETE",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/DB",
									"host": [
										"{{url}}"
									],
									"path": [
										"DB"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "2 Registration",
					"description": "",
					"item": [
						{
							"name": "2.0 Not logged in",
							"description": "",
							"item": [
								{
									"name": "Prss_POST_notLogged_admincreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "475a8d85-f436-4426-a4df-738f786e4e87",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// role not student",
													"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_notLogged_studentcreate_noterms",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c767601-d10f-4b9d-b8d2-6f5f307092f1",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms not accepted",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_notLogged_studentAcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e571cf2-180a-402d-ae9f-ae1748628a7d",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// with unique email",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms accepted",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// role is student",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_notLogged_studentcreate_dup",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "919390a2-f6fb-488b-a746-c653396b3282",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// with nonunique email",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Ssns/{cookie}_DELETE_Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09568cf8-2e93-4f50-933f-5319e0ce022e",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// not logged in",
													"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"",
													"// //non-admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"// //not person in question",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// //admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{url}}/Ssns/{{curLogin}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns",
												"{{curLogin}}"
											]
										},
										"description": null
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.1 Student logged in",
							"description": "",
							"item": [
								{
									"name": "Snss_POST_StudentA_BadLogin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88476b09-3c77-4164-986b-f65c58c22486",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"//badLogin",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"badLogin\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"// //non-admin log in",
													"// tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"// //admin log in",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"WHOA\", \"password\": \"passwordA\"}"
										},
										"url": {
											"raw": "{{url}}/Ssns",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Snss_POST_StudentA_Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f8025f0-1ff0-4c56-95e3-f11e0e8459e4",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //badLogin",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"//non-admin log in",
													"tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"if (tests[\"Cookie Returned\"])",
													"   postman.setEnvironmentVariable(\"curLogin\",",
													"    postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"// //admin log in",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
										},
										"url": {
											"raw": "{{url}}/Ssns",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_admincreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58e40bb3-38d1-4d8f-80b3-8aca174a3474",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// role not student",
													"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentcreate_noterms",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea4eb308-7358-4fa4-a4e7-7f961a153152",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms not accepted",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": false\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82529119-5885-4e76-bdf2-caa0c5741735",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Logged_studentBcreate_dup",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c2c45f0-6f2f-484b-963e-2f28783fc6bc",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"//non-admin logged in",
													"// with nonunique email",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserA@domainA\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordA\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Ssns/{cookie}_DELETE_Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f11f04f0-013e-4bde-a6d5-46e6199520ab",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"",
													"//non-admin",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"// //not person in question",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// //admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{url}}/Ssns/{{curLogin}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns",
												"{{curLogin}}"
											]
										},
										"description": null
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.2 Admin logged in",
							"description": "",
							"item": [
								{
									"name": "Snss_POST_Admin_BadLogin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8c0b305-9bec-45cd-916f-4b1bc74310fc",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"//badLogin",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"tests[\"Has Error Tags\"] = (\"badLogin\" === JSON.parse(responseBody)[0][\"tag\"]);",
													"",
													"// //non-admin log in",
													"// tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"// //admin log in",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"WHOA\", \"password\": \"passwordA\"}"
										},
										"url": {
											"raw": "{{url}}/Ssns",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Snss_POST_Admin_Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e6390b72-a9ce-4134-8cff-9286ec9c4836",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //badLogin",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin log in",
													"// tests[\"Code 200\"] = responseCode.code === 200;",
													"",
													"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"// if (tests[\"Cookie Returned\"])",
													"//   postman.setEnvironmentVariable(\"curLogin\",",
													"//     postman.getResponseCookie(\"CHSAuth\").value)",
													"",
													"//admin log in",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
													" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
													"if (tests[\"Cookie Returned\"])",
													"  postman.setEnvironmentVariable(\"curLogin\",",
													"    postman.getResponseCookie(\"CHSAuth\").value)"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
										},
										"url": {
											"raw": "{{url}}/Ssns",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminCcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e44bb63f-cca6-4c40-925f-0c76c92e30bc",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserC@domainC\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordC\",\n    \"role\"     : 1,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminDcreate_noterms",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "793c9960-0698-4431-9a18-9e21cb3c2482",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms not accepted",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserD@domainD\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordD\",\n    \"role\"     : 1,\n    \"termsAccepted\": false\n   \n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminEcreate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b4c9714-8e34-4a97-8df4-179dd76dc0d3",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// with unique email",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"//terms accepted",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// role not student",
													"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserE@domainE\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordE\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Prss_POST_Admin_adminEcreate_dup",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8992fa1-5151-4cea-9b9e-754e0a5a79ec",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"// //no Email or last name (all cases)",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// //non-admin not logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// //non-admin logged in",
													"// // with nonunique email",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // role not student",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"//admin logged in",
													"// with nonunique email",
													"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"// // with unique email",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// //terms not accepted",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role not student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"// // role is student",
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"UserB@domainB\",\n    \"firstName\": \"FirstA\",\n    \"lastName\" : \"LastA\",\n    \"password\" : \"passwordB\",\n    \"role\"     : 0,\n    \"termsAccepted\": true\n}"
										},
										"url": {
											"raw": "{{url}}/Prss",
											"host": [
												"{{url}}"
											],
											"path": [
												"Prss"
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "Ssns/{cookie}_DELETE_Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5d96748-0579-41fd-9d2c-a805272b1d5f",
												"type": "text/javascript",
												"exec": [
													"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
													"",
													"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
													"",
													"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
													"",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
													"",
													"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
													"",
													"",
													"// //non-admin",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"// //not person in question",
													"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
													"",
													"//admin",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{url}}/Ssns/{{curLogin}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Ssns",
												"{{curLogin}}"
											]
										},
										"description": null
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "3 Not Logged in",
					"description": "",
					"item": [
						{
							"name": "Prss_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d1f5ca9-da82-43ce-9a88-008ef89fc42b",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f04d6f86-4e71-4808-8eef-d34e00e5f9af",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"//not person in question",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_Logout_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4825471-3c8a-4558-b7a4-84410d8a4cc9",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not person in question",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLogin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLogin}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e41989d-ba77-4d2e-b637-a3ff687d6986",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLogin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLogin}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_Template_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ee41670-b204-49ad-8913-b73b8fb2c649",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//no owner",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24207d0b-5060-4da7-b72d-fca92660c3a1",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1f74dce-dd72-45cc-9e12-4809a007de45",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3bed228-80f4-44ba-b220-92de413842f0",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_DELETE_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f184cb48-3862-4d65-846c-1b9a29a6af3a",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "669fe2a4-0d95-4ee6-88e6-aff82dc18cf2",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "669fe2a4-0d95-4ee6-88e6-aff82dc18cf2",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2fe9d0ff-e042-45c4-a2d7-2dd3d3c91d3d",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"termsAccepted\": \"true\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_notPerson",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c304284-b7be-470f-90ee-8cf1215f657a",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passEmpty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "393cecb2-f249-4da4-b2aa-c307ed7ceeae",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"\",\n\t\"oldPassword\" : \"\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_noOldPass",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be64e2fb-e3cb-416a-9adf-66099aebe13c",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "657e2aac-ef62-457f-b991-9197d688f9c3",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // everything right",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs/{msgId}_GET_UnAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98396829-c330-46da-af53-314a46e2f4a2",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/{cnvId}/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"{cnvId}",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b3f6802-d0df-4b0c-8bae-dbf8096744c0",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin not logged in",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin logged in not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "4 Logged in as basic user!",
					"description": "",
					"item": [
						{
							"name": "Snss_POST_StudentA_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "448fb106-1f1d-4467-ae49-fcff9fe0ecfa",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginA\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8507ed4e-ca28-4b7f-a670-dffa55a58b27",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"//non-admin logged in",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"person in question\"] = (JSON.parse(responseBody)).length === 0;",
											"",
											"// // // without valid email",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss?email=UserB@domainB",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserB@domainB",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss_GET_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab8ad7c1-d3e0-4006-92a3-d2c43bf9cf4f",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"person in question\"] = (JSON.parse(responseBody)).length !== 0;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss?email=UserA@domainA",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserA@domainA",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f30b0e7-ed05-45ee-a79b-313a1f8ac3f7",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9f22849-95a5-425f-991d-ccb1d93485af",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// Not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb2546c9-a786-4911-9ad6-462075ca1b69",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"forbiddenField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"termsAccepted\": \"true\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_reg",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae2504a5-5a50-4154-b77d-5777950deeea",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"forbiddenField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"whenRegistered\": \"1234\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_reg copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6a0c45f-6e41-490f-9863-a4b7052e6a33",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"whenRegistered\": \"1234\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_notPerson",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bfb1b047-74c1-4abd-bc1a-a590347c9cd7",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"//Not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0c40d10-7e46-458b-a2c2-3bb33cb39652",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"role\": \"1\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_role copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df367ab1-df11-43a0-bae1-df4435d232f6",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"role\": \"1\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passEmpty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc7c5f0e-2fb5-4435-bea3-4730a39134da",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"\",\n\t\"oldPassword\" : \"\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_noOldPass",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "832f7ee8-7193-493b-99c1-193187acbb60",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"//no old pass",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a6e5934-4383-4789-9ddc-f75173b8d30c",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb4b5e13-db80-4842-be7a-4221a790064b",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// //not person in question",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ae9be6b-cdf5-431a-b6a0-0c1af3db85f1",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLoginA}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLoginA}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96c74a5d-06a0-4728-b7ce-41030ffc94a3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96c74a5d-06a0-4728-b7ce-41030ffc94a3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"yo\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72ceb427-7cbc-43c6-a218-87289729e1cd",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_name_too_long",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8fc7455-c701-423d-9876-aafb925d1d83",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//title longer than 80 chars",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"CHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRIS\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_noOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d60e754-7078-49e0-8008-fbb2af00f9b6",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_withOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36db5d71-8bed-4094-b48b-0bcb19a0c9c9",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"non-empty Response\"] = responseBody? true : false;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/?owner=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									],
									"query": [
										{
											"key": "owner",
											"value": "2",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5577e8dc-289a-4683-95a2-54626d4ac0db",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_noTitle",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4c03caa-8d1a-40e8-9242-f855b0b2eb38",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// No title",
											"tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9e1487b-3bbc-484d-b2ba-2671a69fdd38",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"yo\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_over5000",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8427cea-c20e-4b4b-a756-0a9dbb23e8c7",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// Message over 5000",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41ed09dc-eade-450d-94e7-db330e236064",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg1Time\", (new Date()).getTime());",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"hi\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal_msg_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e105f359-d919-4192-95db-6655d13a840f",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"yo\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59b8496d-7563-4260-8fc8-33ca7dae47c9",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// if (tests[\"Status code is 200\"]) {",
											"//     postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"// }",
											"",
											"//empty body",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"missingField\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f4be0a9-cb18-4863-a0bf-76dbb449e8f6",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Gets all Msgs\"] = (JSON.parse(responseBody)).length == 2;",
											"tests[\"inceasing message order\"] =  parseInt((JSON.parse(responseBody))[0][\"whenMade\"]) <  parseInt((JSON.parse(responseBody))[1][\"whenMade\"]);",
											"console.log(responseBody)",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79e6758d-37d3-48b8-bd33-937cbbaf1ebe",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Gets 1 Msg\"] = (JSON.parse(responseBody)).length == 1;",
											"console.log(responseBody)",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs?num=1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									],
									"query": [
										{
											"key": "num",
											"value": "1",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET_b4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79e6758d-37d3-48b8-bd33-937cbbaf1ebe",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Gets 1 Msg\"] = (JSON.parse(responseBody)).length == 1;",
											"console.log(responseBody)",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1/Msgs?dateTime={{msg1Time}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1",
										"Msgs"
									],
									"query": [
										{
											"key": "dateTime",
											"value": "{{msg1Time}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28896bff-f8c2-4230-b964-fe31fddfc1d3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg1Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Msgs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Msgs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4bcfe2e5-cd3f-443d-b366-8efe80cc29b8",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg2Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Msgs/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Msgs",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Snss_POST_StudentB_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ab76004-bdaa-4973-a45f-ddd0f06be0eb",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginB\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserB@domainB\", \"password\": \"passwordB\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_noOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0664c121-1e47-450c-ba00-33a0a86fdb57",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// not the user",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"YOOOOOOO\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ad1abf9-31b7-402e-81e7-f85d5897eccd",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin logged in not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_DELETE_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d5d59b8-da63-480e-bd2f-5207cf59a1dd",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not the person ",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90d27bf7-3133-403e-81e5-29f44f35b9b3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLoginA}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLoginA}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Snss_POST_StudentA_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "448fb106-1f1d-4467-ae49-fcff9fe0ecfa",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginA\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_DELETE_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ee0a306-23ce-4424-a517-948467511413",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ad1abf9-31b7-402e-81e7-f85d5897eccd",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin logged in not person in question",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96c74a5d-06a0-4728-b7ce-41030ffc94a3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "5 Logged in as admin",
					"description": "",
					"item": [
						{
							"name": "Snss_POST_Admin_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6390b72-a9ce-4134-8cff-9286ec9c4836",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin log in",
											"// tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"//admin log in",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"  postman.setEnvironmentVariable(\"curLogin\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ac8b015-70a8-488d-83f7-11b7c751ae2a",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// tests[\"person in question\"] = (JSON.parse(responseBody)).length === 0;",
											"",
											"// // // without valid email",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"",
											"// //admin",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss?email=UserB@domainB",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserB@domainB",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss_GET_Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab8ad7c1-d3e0-4006-92a3-d2c43bf9cf4f",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// // //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin logged in",
											"// with email",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"person in question\"] = (JSON.parse(responseBody)).length !== 0;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //admin",
											"// // with email",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // without valid email",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss?email=UserA@domainA",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss"
									],
									"query": [
										{
											"key": "email",
											"value": "UserA@domainA",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f30b0e7-ed05-45ee-a79b-313a1f8ac3f7",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_GET_B",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9af28c5f-dba1-40f2-81d8-bdf6746fa2c1",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"",
											"//non-admin logged in",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// // Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_terms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6a0c45f-6e41-490f-9863-a4b7052e6a33",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"termsAccepted\": \"true\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_reg",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6a0c45f-6e41-490f-9863-a4b7052e6a33",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin logged in",
											"//edit other than first, last, pass, role",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"oldPassword\" : \"passwordA\",\n\t\"whenRegistered\": \"1234\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_notPerson",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68f46774-24ee-46bc-8905-35fc1b067a68",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"//Not person in question",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df367ab1-df11-43a0-bae1-df4435d232f6",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"role\": \"1\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_passEmpty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc18f555-c629-4c3f-8881-40c4a4e5a17a",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// role changed",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"badValue\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"\",\n\t\"oldPassword\" : \"\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_noOldPass",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "832f7ee8-7193-493b-99c1-193187acbb60",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"//no old pass",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"passwordA\",\n\t\"role\": \"0\"\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a6e5934-4383-4789-9ddc-f75173b8d30c",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"password\",\n\t\"role\" : 1\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_PUT_normalwitholdPW",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a6e5934-4383-4789-9ddc-f75173b8d30c",
										"type": "text/javascript",
										"exec": [
											"// // tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// // tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// // tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// // tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// // tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //empty or null pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// // role changed",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //no old pass",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"// //Not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// everything right",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// //admin logged in",
											"// //edit other than first, last, pass, role",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// // role changed",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //no old pass",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"// //Not person in question",
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\" :\"Chris\",\n\t\"lastName\":\"KIM\",\n\t\"password\" : \"password\",\n\t\"oldPassword\" : \"passwordC\",\n\t\"role\" : 1\n}\n"
								},
								"url": {
									"raw": "{{url}}/Prss/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e785d50-b85f-41e5-8319-782f14fc8215",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"// //not person in question",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ae9be6b-cdf5-431a-b6a0-0c1af3db85f1",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLoginB}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLoginB}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_GETown",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ae9be6b-cdf5-431a-b6a0-0c1af3db85f1",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLogin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLogin}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_ASession",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d0a6ec3-1e4c-4283-ab12-c2eb3289cb2c",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 401;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLoginA}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLoginA}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96c74a5d-06a0-4728-b7ce-41030ffc94a3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"admin\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_normal_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96c74a5d-06a0-4728-b7ce-41030ffc94a3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"admin2\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5b8df4e-9567-455c-91cd-f7162cf24c1e",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"",
											"// //title longer than 80 chars",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"COOL\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_POST_name_too_long",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8fc7455-c701-423d-9876-aafb925d1d83",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//title longer than 80 chars",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"CHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRISCHRIS\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_noOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d60e754-7078-49e0-8008-fbb2af00f9b6",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs_GET_withOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36db5d71-8bed-4094-b48b-0bcb19a0c9c9",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no owner",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"non-empty Response\"] = responseBody? true : false;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/?owner=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										""
									],
									"query": [
										{
											"key": "owner",
											"value": "2",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78964cd6-bf0a-4dbd-8cf3-95c80d1950e4",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56672a73-74ab-4c71-bc3a-8d9bb6db7b46",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// doesn't exist",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"1"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5644a0f4-7f51-44bf-9ea2-354777879418",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET_unAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14351208-5664-479d-82aa-823156aa7ca3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/4",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"4"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7bf0b24b-111b-451f-860c-a149a3073d02",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/5",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"5"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_noTitle",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b07de270-5278-4538-9514-886f8b3ad726",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// No title",
											"tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/Cnvs/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_dup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "212e0912-f393-4a96-ab17-e205f364036a",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//dupTitle",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"tests[\"Has Error Tags\"] = (\"dupTitle\" === JSON.parse(responseBody)[0][\"tag\"]);",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"yo\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_NormNotOwner",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6d28e58-999f-4071-a900-e8aad3c994da",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"NOT MINE\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}_PUT_Normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ff0ce5d-435e-4273-9609-27e4821a8555",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// //dupTitle",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\" : \"NEWWAVE\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/4",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"4"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_over5000",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8427cea-c20e-4b4b-a756-0a9dbb23e8c7",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// Message over 5000",
											"tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/2/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"2",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41ed09dc-eade-450d-94e7-db330e236064",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg1Time\", (new Date()).getTime());",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"hi\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/2/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"2",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_POST_normal_msg_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e105f359-d919-4192-95db-6655d13a840f",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// // Message over 5000",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    postman.setEnvironmentVariable(\"msg2Time\", (new Date()).getTime());",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"content\" : \"yo\"\n}"
								},
								"url": {
									"raw": "{{url}}/Cnvs/2/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"2",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Cnvs/{cnvId}/Msgs_GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7ae0b83-7aac-4066-a37d-eeb03b57029a",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Cnvs/2/Msgs",
									"host": [
										"{{url}}"
									],
									"path": [
										"Cnvs",
										"2",
										"Msgs"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28896bff-f8c2-4230-b964-fe31fddfc1d3",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg1Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Msgs/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"Msgs",
										"3"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Msgs/{msgId}_GET_CheckTime2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4bcfe2e5-cd3f-443d-b366-8efe80cc29b8",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //no params",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"//non-admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"if (tests[\"Status code is 200\"]) {",
											"    tests[\"created within 1 second\"] = parseInt(environment[\"msg2Time\"]) <= (JSON.parse(responseBody)[\"whenMade\"] + 1000);",
											"}",
											"",
											"// //admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Msgs/4",
									"host": [
										"{{url}}"
									],
									"path": [
										"Msgs",
										"4"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Ssns/{cookie}_DELETE_Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "752af4db-34d8-490c-a943-65bd9307f519",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// //not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//admin",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Body Empty\"] = responseBody === \"\";"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/Ssns/{{curLogin}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns",
										"{{curLogin}}"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "nuke the server",
					"description": "",
					"item": [
						{
							"name": "DB_DELETE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7096a9a9-9f49-437b-b5f5-1e0b97cb75a4",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/DB",
									"host": [
										"{{url}}"
									],
									"path": [
										"DB"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Snss_POST_StudentA_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "448fb106-1f1d-4467-ae49-fcff9fe0ecfa",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"//non-admin log in",
											"tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"   postman.setEnvironmentVariable(\"curLoginA\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"// //admin log in",
											"// tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"UserA@domainA\", \"password\": \"passwordA\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "DB_DELETE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ffd11771-ae0a-477f-8dec-eb319b31415c",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/DB",
									"host": [
										"{{url}}"
									],
									"path": [
										"DB"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Snss_POST_Admin_Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6390b72-a9ce-4134-8cff-9286ec9c4836",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"// //badLogin",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// //non-admin log in",
											"// tests[\"Code 200\"] = responseCode.code === 200;",
											"",
											"// tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											"//  !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"// if (tests[\"Cookie Returned\"])",
											"//   postman.setEnvironmentVariable(\"curLogin\",",
											"//     postman.getResponseCookie(\"CHSAuth\").value)",
											"",
											"//admin log in",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"tests[\"Cookie Returned\"] = postman.getResponseCookie(\"CHSAuth\")",
											" !== null && postman.getResponseCookie(\"CHSAuth\").value !== undefined;",
											"if (tests[\"Cookie Returned\"])",
											"  postman.setEnvironmentVariable(\"curLogin\",",
											"    postman.getResponseCookie(\"CHSAuth\").value)"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"email\": \"adm@11.com\", \"password\": \"password\"}"
								},
								"url": {
									"raw": "{{url}}/Ssns",
									"host": [
										"{{url}}"
									],
									"path": [
										"Ssns"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Prss/{prsId}_DELETE_A",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22ba5559-9b0f-4b00-9677-ae2b35bfe9eb",
										"type": "text/javascript",
										"exec": [
											"// tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"",
											"",
											"// //non-admin not logged in",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// //non-admin logged in not person in question",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"//admin logged in",
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"tests[\"Body Empty\"] = responseBody === \"\";"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{url}}/Prss/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Prss",
										"2"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "DB_DELETE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60dc8bfb-18b4-4154-9357-fb0817de17f0",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200: Success\"] = responseCode.code === 200;",
											"",
											"// tests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;",
											"",
											"// tests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
											"",
											"// tests[\"Status code is 403: Forbidden\"] = responseCode.code === 403;",
											"",
											"// tests[\"Status code is 404: Not Found\"] = responseCode.code === 404;",
											"",
											"// tests[\"Status code is 500: Server Err\"] = responseCode.code === 500;",
											"tests[\"Body Empty\"] = responseBody === \"\";"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/javascript"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/DB",
									"host": [
										"{{url}}"
									],
									"path": [
										"DB"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}